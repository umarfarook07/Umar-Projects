//Exercises on basic HTML tags.
<!DOCTYPE html>
<html>

<head>
  <title>My HTML Page</title>
</head>

<body>

  <h1>Main Heading</h1>

  <p>This is a paragraph with <strong>strong</strong> and <em>emphasized</em> text.</p>

  <h2>Subheading</h2>

  <ul>
    <li>List item 1</li>
    <li>List item 2</li>
    <li>List item 3</li>
  </ul>

</body>

</html>

//Design a HTML page using suitable table tags and attributes.
<!DOCTYPE html>
<html>

<head>
  <title>Table Example</title>
</head>

<body>

  <table border="1">
    <!-- Table Header -->
    <thead>
      <tr>
        <th colspan="2">Header 1</th>
        <th>Header 2</th>
      </tr>
    </thead>

    <!-- Table Body -->
    <tbody>
      <tr>
        <td>Row 1, Cell 1</td>
        <td>Row 1, Cell 2</td>
        <td>Row 1, Cell 3</td>
      </tr>
      <tr>
        <td>Row 2, Cell 1</td>
        <td>Row 2, Cell 2</td>
        <td>Row 2, Cell 3</td>
      </tr>
    </tbody>

    <!-- Table Footer -->
    <tfoot>
      <tr>
        <td colspan="3">Footer content</td>
      </tr>
    </tfoot>
  </table>

</body>

</html>

//Design a HTML page with a form containing various controls.

<!DOCTYPE html>
<html>

<head>
  <title>Form Example</title>
</head>

<body>

  <h1>Sample Form</h1>

  <form action="/submit" method="post">

    <!-- Text Input -->
    <label for="username">Username:</label>
    <input type="text" id="username" name="username" required>

    <br>

    <!-- Password Input -->
    <label for="password">Password:</label>
    <input type="password" id="password" name="password" required>

    <br>

    <!-- Radio Buttons -->
    <p>Gender:</p>
    <input type="radio" id="male" name="gender" value="male">
    <label for="male">Male</label>
    <input type="radio" id="female" name="gender" value="female">
    <label for="female">Female</label>

    <br>

    <!-- Checkbox -->
    <input type="checkbox" id="subscribe" name="subscribe" checked>
    <label for="subscribe">Subscribe to newsletter</label>

    <br>

    <!-- Select Dropdown -->
    <label for="country">Country:</label>
    <select id="country" name="country">
      <option value="usa">United States</option>
      <option value="canada">Canada</option>
      <option value="uk">United Kingdom</option>
    </select>

    <br>

    <!-- Textarea -->
    <label for="message">Message:</label>
    <textarea id="message" name="message" rows="4" cols="50"></textarea>

    <br>

    <!-- Submit Button -->
    <input type="submit" value="Submit">

  </form>

</body>

</html>
//Design a HTML page on iframes.
<!DOCTYPE html>
<html>

<head>
  <title>IFrame Example</title>
</head>

<body>

  <h1>IFrame Page</h1>

  <!-- First IFrame -->
  <iframe src="https://www.example.com" width="400" height="300" frameborder="0" allowfullscreen></iframe>

  <br>

  <!-- Second IFrame -->
  <iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d396331.10425381115!2d-74.25986559180691!3d40.6971493832151!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x89c3c38a73db1f51%3A0x4f5f8ea3df52da6b!2sNew%20York%2C%20NY!5e0!3m2!1sen!2sus!4v1635766071491!5m2!1sen!2sus" width="600" height="450" style="border:0;" allowfullscreen="" loading="lazy"></iframe>

</body>

</html>


//Exercises on CSS.

/* Style.css */

/* Selector for an element with the class "custom-box" */
.custom-box {
  background-color: #3498db; /* Set background color to a shade of blue */
  position: relative; /* Set position property to relative */
  width: 300px; /* Set width to 300 pixels */
  height: 200px; /* Set height to 200 pixels */
}

/* Selector for an element with the ID "header" */
#header {
  background-color: #2ecc71; /* Set background color to a shade of green */
  position: fixed; /* Set position property to fixed */
  width: 100%; /* Set width to 100% of the viewport */
  height: 50px; /* Set height to 50 pixels */
}

<!DOCTYPE html>
<html>

<head>
  <title>Styled Element</title>
  <link rel="stylesheet" type="text/css" href="style.css">
</head>

<body>

  <div class="custom-box">
    <!-- Content goes here -->
  </div>

  <div id="header">
    <!-- Content goes here -->
  </div>

</body>

</html>

//Exercises on designing a XML document
<?xml version="1.0" encoding="UTF-8"?>
<students>
  <student>
    <id>1</id>
    <name>John Doe</name>
    <grade>A</grade>
    <age>20</age>
  </student>

  <student>
    <id>2</id>
    <name>Jane Smith</name>
    <grade>B</grade>
    <age>21</age>
  </student>

  <student>
    <id>3</id>
    <name>Mike Johnson</name>
    <grade>C</grade>
    <age>22</age>
  </student>
</students>

//Exercises on JavaScript functions
<!DOCTYPE html>
<html>

<head>
  <title>Sum Calculator</title>
</head>

<body>

  <h1>Sum Calculator</h1>

  <label for="num1">Enter Number 1: </label>
  <input type="text" id="num1">

  <br>

  <label for="num2">Enter Number 2: </label>
  <input type="text" id="num2">

  <br>

  <button onclick="calculateSum()">Calculate Sum</button>

  <p id="result">Result: </p>

  <script>
    function calculateSum() {
      // Get values from input fields
      var num1 = parseFloat(document.getElementById('num1').value);
      var num2 = parseFloat(document.getElementById('num2').value);

      // Check if the input is valid
      if (!isNaN(num1) && !isNaN(num2)) {
        // Perform the sum
        var sum = num1 + num2;

        // Display the result
        document.getElementById('result').textContent = 'Result: ' + sum;
      } else {
        alert('Please enter valid numbers.');
      }
    }
  </script>

</body>

</html>

//Exercises on JavaScript arrays
<!DOCTYPE html>
<html>

<head>
  <title>Sorting Numbers</title>
</head>

<body>

  <h1>Sorting Numbers</h1>

  <p>Enter numbers separated by commas:</p>
  <input type="text" id="numbersInput">
  <button onclick="sortNumbers()">Sort</button>

  <p id="sortedResult">Sorted Numbers:</p>

  <script>
    function sortNumbers() {
      // Get input values as a comma-separated string
      var inputString = document.getElementById('numbersInput').value;

      // Convert the string into an array of numbers
      var numbersArray = inputString.split(',').map(Number);

      // Check if the array is not empty
      if (numbersArray.length > 0) {
        // Sort the array in ascending order
        numbersArray.sort(function (a, b) {
          return a - b;
        });

        // Display the sorted result
        document.getElementById('sortedResult').textContent = 'Sorted Numbers: ' + numbersArray.join(', ');
      } else {
        alert('Please enter valid numbers.');
      }
    }
  </script>

</body>

</html>

//Write a JavaScript program using Ajax, to send the request to server and receive the response from server with example program
<!DOCTYPE html>
<html>

<head>
  <title>AJAX Example</title>
</head>

<body>

  <h1>AJAX Example</h1>

  <button onclick="getData()">Get Data</button>

  <p id="result">Result:</p>

  <script>
    function getData() {
      // Create a new XMLHttpRequest object
      var xhr = new XMLHttpRequest();

      // Define the request method, URL, and asynchronous flag
      xhr.open('GET', 'https://jsonplaceholder.typicode.com/posts/1', true);

      // Set up a callback function to handle the response
      xhr.onreadystatechange = function () {
        if (xhr.readyState === 4 && xhr.status === 200) {
          // Parse the JSON response
          var responseData = JSON.parse(xhr.responseText);

          // Display the information
          document.getElementById('result').textContent = 'Result: ' + responseData.title;
        } else if (xhr.readyState === 4 && xhr.status !== 200) {
          // Handle errors
          console.error('Error:', xhr.status);
        }
      };

      // Send the request
      xhr.send();
    }
  </script>

</body>

</html>

//Write a program on mouse events using JQuery

<!DOCTYPE html>
<html>

<head>
  <title>Mouse Events Example</title>
  <!-- Include jQuery library -->
  <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
</head>

<body>

  <div id="messageDiv" style="border: 1px solid #ccc; padding: 20px; margin: 20px;">
    Hover over me!
  </div>

  <script>
    // jQuery document ready function
    $(document).ready(function () {
      // Mouse enter event
      $('#messageDiv').mouseenter(function () {
        $(this).text('Mouse Enter!');
      });

      // Mouse leave event
      $('#messageDiv').mouseleave(function () {
        $(this).text('Mouse Leave!');
      });

      // Click event
      $('#messageDiv').click(function () {
        $(this).text('Click!');
      });

      // Double click event
      $('#messageDiv').dblclick(function () {
        $(this).text('Double Click!');
      });
    });
  </script>

</body>

</html>

//Design a webpage to apply the Effects of jQuery
<!DOCTYPE html>
<html>

<head>
  <title>jQuery Effects Example</title>
  <!-- Include jQuery library -->
  <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
  <style>
    /* Style for better visibility */
    div {
      width: 200px;
      height: 100px;
      background-color: #f0f0f0;
      border: 1px solid #ccc;
      margin: 10px;
      padding: 10px;
    }
  </style>
</head>

<body>

  <div id="box">This is a box</div>

  <button onclick="hideBox()">Hide</button>
  <button onclick="showBox()">Show</button>
  <button onclick="slideUpBox()">Slide Up</button>
  <button onclick="slideDownBox()">Slide Down</button>
  <button onclick="fadeInBox()">Fade In</button>
  <button onclick="fadeOutBox()">Fade Out</button>

  <script>
    function hideBox() {
      $('#box').hide();
    }

    function showBox() {
      $('#box').show();
    }

    function slideUpBox() {
      $('#box').slideUp();
    }

    function slideDownBox() {
      $('#box').slideDown();
    }

    function fadeInBox() {
      $('#box').fadeIn();
    }

    function fadeOutBox() {
      $('#box').fadeOut();
    }
  </script>

</body>

</html>
//Exercises on changing background color using CSS properties in jQuery
<!DOCTYPE html>
<html>

<head>
  <title>jQuery CSS Example</title>
  <!-- Include jQuery library -->
  <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
  <style>
    /* Initial style for better visibility */
    div {
      width: 200px;
      height: 100px;
      background-color: #f0f0f0;
      border: 1px solid #ccc;
      margin: 10px;
      padding: 10px;
    }
  </style>
</head>

<body>

  <div id="box">This is a box</div>

  <button onclick="changeColor()">Change Color</button>
  <button onclick="changeBackgroundColor()">Change Background Color</button>
  <button onclick="changeBorder()">Change Border</button>

  <script>
    function changeColor() {
      $('#box').css('color', 'blue');
    }

    function changeBackgroundColor() {
      $('#box').css('background-color', 'lightgreen');
    }

    function changeBorder() {
      $('#box').css('border', '2px solid red');
    }
  </script>

</body>

</html>
//Write a JavaScriptprogram using Date Picker jQuery UI plugin(download from https://jqueryui.com/datepicker/)
<!DOCTYPE html>
<html>

<head>
  <title>jQuery Datepicker Example</title>
  <!-- Include jQuery and jQuery UI libraries -->
  <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
  <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
  <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

  <!-- Custom styles for better visibility -->
  <style>
    input {
      margin: 10px;
      padding: 5px;
    }
  </style>
</head>

<body>

  <label for="datepicker">Select Date:</label>
  <input type="text" id="datepicker">

  <script>
    // jQuery document ready function
    $(document).ready(function () {
      // Initialize Datepicker
      $("#datepicker").datepicker();
    });
  </script>

</body>

</html>
//Write a JavaScript program using Responsive SlidesjQuery plugin(download from responsiveslides.com)
<!DOCTYPE html>
<html>

<head>
  <title>ResponsiveSlides jQuery Example</title>
  <!-- Include jQuery and ResponsiveSlides libraries -->
  <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
  <script src="https://cdn.jsdelivr.net/responsiveslides/1.55/responsiveslides.min.js"></script>

  <!-- Custom styles for better visibility -->
  <style>
    #slider {
      max-width: 800px;
      margin: 20px auto;
    }

    .rslides {
      position: relative;
      list-style: none;
      overflow: hidden;
      width: 100%;
      padding: 0;
      margin: 0;
    }

    .rslides li {
      -webkit-backface-visibility: hidden;
      position: absolute;
      display: none;
      width: 100%;
      left: 0;
      top: 0;
    }

    .rslides li:first-child {
      position: relative;
      display: block;
      float: left;
    }
  </style>
</head>

<body>

  <div id="slider" class="rslides_container">
    <ul class="rslides">
      <li><img src="https://via.placeholder.com/800x400" alt="Slide 1"></li>
      <li><img src="https://via.placeholder.com/800x400" alt="Slide 2"></li>
      <li><img src="https://via.placeholder.com/800x400" alt="Slide 3"></li>
    </ul>
  </div>

  <script>
    // jQuery document ready function
    $(document).ready(function () {
      // Initialize ResponsiveSlides
      $(".rslides").responsiveSlides();
    });
  </script>

</body>

</html>

//Exercise On Angular JS Directives
<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>AngularJS Example</title>
  <!-- Include AngularJS library from CDN -->
  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.3.14/angular.min.js"></script>
</head>

<body ng-app="myApp" ng-controller="myController">
  <h1>AngularJS Item List</h1>

  <!-- Display the list of items -->
  <ul>
    <li ng-repeat="item in items">{{ item }}</li>
  </ul>

  <!-- Form to add new items -->
  <form ng-submit="addItem()">
    <label for="newItem">Add Item:</label>
    <input type="text" id="newItem" ng-model="newItem" required>
    <button type="submit">Add</button>
  </form>

  <script>
    // Create an AngularJS module
    var app = angular.module('myApp', []);

    // Create an AngularJS controller
    app.controller('myController', function ($scope) {
      // Initial list of items
      $scope.items = ['Item 1', 'Item 2', 'Item 3'];

      // Function to add a new item to the list
      $scope.addItem = function () {
        if ($scope.newItem) {
          $scope.items.push($scope.newItem);
          $scope.newItem = ''; // Clear the input field
        }
      };
    });
  </script>
</body>

</html>

//Exercise on PHP arrays
<?php

function findSmallest($numbers) {
    // Check if the array is not empty
    if (!empty($numbers)) {
        // Initialize the smallest variable with the first element
        $smallest = $numbers[0];

        // Loop through the array to find the smallest
        foreach ($numbers as $number) {
            if ($number < $smallest) {
                $smallest = $number;
            }
        }

        return $smallest;
    } else {
        return null; // Return null for an empty array
    }
}

// Example usage:
$numberArray = [5, 2, 8, 1, 7, 3];
$smallestNumber = findSmallest($numberArray);

if ($smallestNumber !== null) {
    echo "The smallest number is: $smallestNumber";
} else {
    echo "The array is empty.";
}

?>
//Design a form and access the elements of form using PHP
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PHP Form Example</title>
</head>

<body>

    <h1>PHP Form Example</h1>

    <form action="" method="post">
        <label for="num1">Enter Number 1:</label>
        <input type="text" name="num1" id="num1" required>

        <br>

        <label for="num2">Enter Number 2:</label>
        <input type="text" name="num2" id="num2" required>

        <br>

        <input type="submit" value="Calculate Sum">
    </form>

    <?php
    // Check if form is submitted
    if ($_SERVER["REQUEST_METHOD"] == "POST") {
        // Retrieve the submitted numbers
        $num1 = isset($_POST['num1']) ? $_POST['num1'] : 0;
        $num2 = isset($_POST['num2']) ? $_POST['num2'] : 0;

        // Calculate the sum
        $sum = $num1 + $num2;

        // Display the result
        echo "<p>The sum of $num1 and $num2 is: $sum</p>";
    }
    ?>

</body>

</html>


//Write PHP code to perform various operations on a database table using functions.
<?php

// Function to establish a database connection
function connectDB() {
    $servername = "localhost";
    $username = "your_username";
    $password = "your_password";
    $dbname = "example_db";

    // Create connection
    $conn = new mysqli($servername, $username, $password, $dbname);

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    return $conn;
}

// Function to retrieve data from the database
function retrieveData() {
    $conn = connectDB();
    $result = $conn->query("SELECT * FROM example_table");
    $conn->close();

    return $result;
}

// Function to insert data into the database
function insertData($name, $age) {
    $conn = connectDB();
    $stmt = $conn->prepare("INSERT INTO example_table (name, age) VALUES (?, ?)");
    $stmt->bind_param("si", $name, $age);

    if ($stmt->execute()) {
        $conn->close();
        return true;
    } else {
        $conn->close();
        return false;
    }
}

// Function to modify data in the database
function modifyData($id, $name, $age) {
    $conn = connectDB();
    $stmt = $conn->prepare("UPDATE example_table SET name = ?, age = ? WHERE id = ?");
    $stmt->bind_param("sii", $name, $age, $id);

    if ($stmt->execute()) {
        $conn->close();
        return true;
    } else {
        $conn->close();
        return false;
    }
}

// Function to delete data from the database
function deleteData($id) {
    $conn = connectDB();
    $stmt = $conn->prepare("DELETE FROM example_table WHERE id = ?");
    $stmt->bind_param("i", $id);

    if ($stmt->execute()) {
        $conn->close();
        return true;
    } else {
        $conn->close();
        return false;
    }
}

// Example usage:

// Retrieving data
$result = retrieveData();
while ($row = $result->fetch_assoc()) {
    echo "ID: " . $row["id"] . ", Name: " . $row["name"] . ", Age: " . $row["age"] . "<br>";
}

// Inserting data
if (insertData("John Doe", 25)) {
    echo "Data inserted successfully<br>";
} else {
    echo "Failed to insert data<br>";
}

// Modifying data
if (modifyData(1, "Jane Smith", 30)) {
    echo "Data modified successfully<br>";
} else {
    echo "Failed to modify data<br>";
}

// Deleting data
if (deleteData(2)) {
    echo "Data deleted successfully<br>";
} else {
    echo "Failed to delete data<br>";
}

?>

//Write a PHP program to set a cookie.
<?php
// Set a cookie with the name 'user' and value 'JohnDoe'
$cookieName = 'user';
$cookieValue = 'JohnDoe';
$expirationTime = time() + (60 * 60 * 24 * 7); // Cookie will expire in 7 days

setcookie($cookieName, $cookieValue, $expirationTime, "/"); // "/" makes the cookie available to the entire domain

echo "Cookie '$cookieName' is set with the value '$cookieValue'";
?>